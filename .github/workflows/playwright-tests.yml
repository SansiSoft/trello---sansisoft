name: Playwright Tests

on:
  push:
    branches: 
      - main
      - dev
  pull_request:
    branches: 
      - main
      - dev
  schedule:
    - cron: "0 */6 * * *"       # Se ejecuta cada 6 horas (00:00, 06:00, 12:00, 18:00 UTC)
  workflow_dispatch:
    inputs:
      grep:
        description: 'Etiqueta o patrón de tests a ejecutar (ej: @smoke, @positivo, o vacío para todos)'
        required: false
        default: ''

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Update .env values
        run: |
          echo "EMAIL=${{ secrets.EMAIL }}" > .env
          echo "PASSWORD=${{ secrets.PASSWORD }}" >> .env
          echo "TRELLO_KEY=${{ secrets.TRELLO_KEY }}" >> .env
          echo "TRELLO_TOKEN=${{ secrets.TRELLO_TOKEN }}" >> .env
          echo "TRELLO_KEY_ALT=${{ secrets.TRELLO_KEY_ALT }}" >> .env
          echo "TRELLO_TOKEN_ALT=${{ secrets.TRELLO_TOKEN_ALT }}" >> .env
          echo "TRELLO_API_URL=${{ secrets.TRELLO_API_URL }}" >> .env
          echo "ORGANIZATION_ID=${{ secrets.ORGANIZATION_ID }}" >> .env
          echo "SOURCELAB_USERNAME=${{ secrets.SOURCELAB_USERNAME }}" >> .env
          echo "SOURCELAB_ACCESS_KEY=${{ secrets.SOURCELAB_ACCESS_KEY }}" >> .env

      - name: Install dependencies
        run: npm install

      - name: Install Playwright Browsers
        run: npx playwright install chromium

      - name: Prepare logs folder
        run: mkdir -p logs

      - name: Run Playwright tests
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ github.event.inputs.grep }}" ]; then
            echo "Ejecución manual con filtro: ${{ github.event.inputs.grep }}"
            npx playwright test --grep "${{ github.event.inputs.grep }}"
          else
            echo "Ejecución automática (push/pull/schedule) — solo tests @smoke"
            npx playwright test --grep "@smoke"
          fi

      - name: Verify logs exist
        if: always()
        run: |
          echo "Verificando existencia de logs..."
          ls -l logs || echo "No se encontró la carpeta logs"

      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          retention-days: 7
          
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: logs/
          retention-days: 7

      - name: Upload test-results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results
          retention-days: 7
